<UserControl x:Class="GopherClient.View.BrowserPages.GopherView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:GopherClient.View.BrowserPages"
      xmlns:rt="clr-namespace:GopherClient.ViewModel.BrowserPages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Background="Black"
      IsTabStop="True" Focusable="True" KeyDown="UserControl_KeyDown"
      >

    <UserControl.InputBindings>
        <KeyBinding Key="Up" Command="{Binding SelectUpCommand}"/>
        <KeyBinding Key="Down" Command="{Binding SelectDownCommand}"/>
        
        <KeyBinding Key="Up" Modifiers="Shift" Command="{Binding SelectNextInteractableUpCommand}"/>
        <KeyBinding Key="Down" Modifiers="Shift" Command="{Binding SelectNextInteractableDownCommand}"/>
        
        <KeyBinding Key="Return" Modifiers="Shift" Command="{Binding ExecuteSelectedElementCommand}"/>
        <KeyBinding Key="Return" Command="{Binding ExecuteSelectedElementCommand}"/>

        <KeyBinding Key="Return" Modifiers="Alt" Command="{Binding DownloadSelectedElementToDiskCommand}"/>
    </UserControl.InputBindings>

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type rt:GopherElement}">
            <Border Name="back" Background="Black" MouseLeftButtonDown="GopherItemMouseDown" ToolTip="{Binding url, IsAsync=True, Mode=OneTime}" SnapsToDevicePixels="False">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Name="icon" Width="15" VerticalAlignment="Center" FontFamily="{StaticResource SymbolFont}" Height="15" Margin="15,0,5,0" Foreground="DarkSlateBlue"/>
                    <TextBlock Name="text" Text="{Binding text, IsAsync=True, Mode=OneTime}" Foreground="White" FontSize="15"/>
                </StackPanel>
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Download to File" Click="MenuItem_Click"/>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>
            
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="back" Property="Background" Value="DarkBlue"/>
                </Trigger>

                <DataTrigger Binding="{Binding Path=IsSelected, IsAsync=True}" Value="true">
                    <Setter TargetName="back" Property="Background" Value="Blue"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="1">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xed89;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="0">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xed0f;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="g">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xece3;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="9">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xed13;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="I">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xee45;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="7">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xee74;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="h">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xedcf;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value=".">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xf046;"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=IsInteractable, IsAsync=True}" Value="false">
                    <Setter TargetName="text" Property="TextBlock.Foreground" Value="Gray"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="i">
                    <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="text" Property="TextBlock.Foreground" Value="LightGray"/>
                    <Setter TargetName="back" Property="Border.ToolTip" Value="{x:Null}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=type, IsAsync=True}" Value="3">
                    <Setter TargetName="icon" Property="TextBlock.Text" Value="&#xeca1;"/>
                    <Setter TargetName="icon" Property="TextBlock.Foreground" Value="Red"/>
                    <Setter TargetName="text" Property="TextBlock.Foreground" Value="Red"/>
                    <Setter TargetName="back" Property="Border.ToolTip" Value="{Binding source, IsAsync=True}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <DockPanel>

        <ItemsControl Name="GopherElements" ItemsSource="{Binding Elements}" VirtualizingPanel.IsVirtualizing="True" ScrollViewer.VerticalScrollBarVisibility="Visible">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Name="GopherElementsVirtualizingStackpanel" IsVirtualizing="True"
                              VirtualizationMode="Recycling" >
                    </VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}"
              Background="{TemplateBinding Background}">
                        <ScrollViewer CanContentScroll="True"
                      Padding="{TemplateBinding Padding}"
                      Focusable="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>
    </DockPanel>
</UserControl>